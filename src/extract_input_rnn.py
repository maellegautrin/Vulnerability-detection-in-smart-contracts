import csv
import numpy as np
import torch
import os

def create_tensor_list(csv_file, output_folder):
    tensor_list = []
    current_file = None
    current_tensor = None
    if not os.path.exists(output_folder):
        os.makedirs(output_folder)

    with open(csv_file, 'r') as file:
        reader = csv.reader(file)
        next(reader)
        for row in reader:
            filename = row[0].split('_')[0]+"_"+row[0].split('_')[1]
            values = [float(x) for x in row[1:]]

            if filename != current_file:
                current_file = filename
                
                if current_tensor is not None:
                    nom_fichier_tensor = f"tensor_{current_file}.txt"
                    write_matrix(current_tensor, nom_fichier_tensor, output_folder)
                    tensor_list.append(nom_fichier_tensor)
                
                current_tensor = [values]
            else:
                current_tensor.append(values)

    if current_tensor is not None:
        nom_fichier_tensor = f"tensor_{current_file}.txt"
        write_matrix(current_tensor, nom_fichier_tensor, output_folder)
        tensor_list.append(nom_fichier_tensor)

    return tensor_list

def write_matrix(matrix, file, output_folder):
    try:
        with open(output_folder+file, 'w') as fichier:
                fichier.write(str(matrix))
        print(file)
    except Exception as e:
        print("Erreur lors de l'Ã©criture de la matrix dans le fichier :", e)


tensor_list_secure = create_tensor_list("vectorization.csv", "input_rnn/")
    